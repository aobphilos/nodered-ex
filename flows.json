[
  {
    "id": "1710c00d.e8304",
    "type": "tab",
    "label": "AirVisual Notify",
    "disabled": false,
    "info": ""
  },
  {
    "id": "48a42e48.74137",
    "type": "ui_base",
    "theme": {
      "name": "theme-dark",
      "lightTheme": {
        "default": "#0094CE",
        "baseColor": "#0094CE",
        "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
        "edited": true,
        "reset": false
      },
      "darkTheme": {
        "default": "#097479",
        "baseColor": "#097479",
        "baseFont": "Times New Roman,Times,serif",
        "edited": true,
        "reset": false
      },
      "customTheme": {
        "name": "Untitled Theme 1",
        "default": "#4B7930",
        "baseColor": "#4B7930",
        "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
      },
      "themeState": {
        "base-color": {
          "default": "#097479",
          "value": "#097479",
          "edited": false
        },
        "page-titlebar-backgroundColor": {
          "value": "#097479",
          "edited": false
        },
        "page-backgroundColor": { "value": "#111111", "edited": false },
        "page-sidebar-backgroundColor": { "value": "#000000", "edited": false },
        "group-textColor": { "value": "#0eb8c0", "edited": false },
        "group-borderColor": { "value": "#555555", "edited": false },
        "group-backgroundColor": { "value": "#333333", "edited": false },
        "widget-textColor": { "value": "#eeeeee", "edited": false },
        "widget-backgroundColor": { "value": "#097479", "edited": false },
        "widget-borderColor": { "value": "#333333", "edited": false },
        "base-font": { "value": "Times New Roman,Times,serif" }
      },
      "angularTheme": {
        "primary": "indigo",
        "accents": "blue",
        "warn": "red",
        "background": "grey"
      }
    },
    "site": {
      "name": "Node-RED Dashboard",
      "hideToolbar": "false",
      "allowSwipe": "false",
      "lockMenu": "false",
      "allowTempTheme": "true",
      "dateFormat": "DD/MM/YYYY",
      "sizes": {
        "sx": 48,
        "sy": 48,
        "gx": 6,
        "gy": 6,
        "cx": 6,
        "cy": 6,
        "px": 0,
        "py": 0
      }
    }
  },
  {
    "id": "3bccd41d.0e6efc",
    "type": "ui_tab",
    "z": "",
    "name": "AirVisual",
    "icon": "dashboard",
    "order": 1,
    "disabled": false,
    "hidden": false
  },
  {
    "id": "7b469d8d.557a74",
    "type": "ui_group",
    "z": "",
    "name": "Outdoor",
    "tab": "3bccd41d.0e6efc",
    "order": 1,
    "disp": true,
    "width": "6",
    "collapse": false
  },
  {
    "id": "14884f49.fb2b41",
    "type": "ui_group",
    "z": "",
    "name": "Weather",
    "tab": "3bccd41d.0e6efc",
    "order": 2,
    "disp": true,
    "width": "6",
    "collapse": false
  },
  {
    "id": "9de03d1a.383f3",
    "type": "comment",
    "z": "1710c00d.e8304",
    "name": "Sample: Retrieve AQI",
    "info": "",
    "x": 140,
    "y": 40,
    "wires": []
  },
  {
    "id": "186a450.ef70abb",
    "type": "http request",
    "z": "1710c00d.e8304",
    "name": "AirVisual API",
    "method": "GET",
    "ret": "obj",
    "paytoqs": true,
    "url": "https://api.airvisual.com/v2/city",
    "tls": "",
    "persist": false,
    "proxy": "",
    "authType": "",
    "x": 550,
    "y": 100,
    "wires": [["b2cbe7cc.31de18"]]
  },
  {
    "id": "7b786959.d9c808",
    "type": "inject",
    "z": "1710c00d.e8304",
    "name": "Inject (1 hour)",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "3600",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "x": 140,
    "y": 100,
    "wires": [["7f272417.53badc"]],
    "outputLabels": ["inject"],
    "icon": "font-awesome/fa-feed"
  },
  {
    "id": "d16349c5.c65668",
    "type": "function",
    "z": "1710c00d.e8304",
    "name": "Transform Data",
    "func": "function transformData() {\n  const { status, data } = flow.get('airData') || {};\n\n  if (status !== 'success')\n    return {\n      payload: { status: 'failed', message: 'Cannot get any data from API' }\n    };\n\n  return [\n    {\n      payload: {\n        status,\n        data\n      }\n    },\n    {\n      weather: data.current.weather\n    },\n    {\n      pollution: data.current.pollution\n    }\n  ];\n}\n\nreturn transformData()",
    "outputs": 3,
    "noerr": 0,
    "x": 360,
    "y": 320,
    "wires": [["c61a0bc5.f2f6f8"], ["8475750e.583b58"], ["37a492c1.497cbe"]]
  },
  {
    "id": "6d07ff34.c23a8",
    "type": "ui_template",
    "z": "1710c00d.e8304",
    "group": "14884f49.fb2b41",
    "name": "Weather Box",
    "order": 1,
    "width": 6,
    "height": 4,
    "format": "<div style=\"text-align: center;\" >\n  <div  style=\"height: 80px; display:inline-block; padding-right: 10px;\">\n    <img src=\"{{msg.payload.url}}\" alt=\"{{msg.payload.desc}}\" title=\"{{msg.payload.desc}}\" width=\"75\" /><br/>\n  </div>\n  <div  style=\"display:inline-block;margin-top: 19px;vertical-align: top;font-size: 35px;\">\n    <span>31Â°</span>\n  </div>\n  <div style=\"width: 100%; text-transform: capitalize;\">\n    <h3>{{msg.payload.desc}}</h3>\n  </div>\n</div>",
    "storeOutMessages": true,
    "fwdInMessages": true,
    "templateScope": "local",
    "x": 890,
    "y": 320,
    "wires": [[]]
  },
  {
    "id": "8475750e.583b58",
    "type": "function",
    "z": "1710c00d.e8304",
    "name": "Mapping Weather Icon",
    "func": "const { ic: icon }  = msg.weather;\nlet desc = 'Weather Icon';\nswitch (icon){\n    case '01d': desc='clear sky (day)'; break;\n    case '01n': desc='clear sky (night)'; break;\n    case '02d': desc='few clouds (day)'; break;\n    case '02n': desc='few clouds (night)'; break;\n    case '03d': desc='scattered clouds'; break;\n    case '04d': desc='broken clouds'; break;\n    case '09d': desc='shower rain'; break;\n    case '10d': desc='rain (day time)'; break;\n    case '10n': desc='rain (night time)'; break;\n    case '11d': desc='thunderstorm'; break;\n    case '13d': desc='snow'; break;\n    case '50d': desc='mist'; break;\n}\nreturn {\n    payload: {\n        url: `https://www.airvisual.com/images/${icon}.png`,\n        desc: desc\n    }\n};",
    "outputs": 1,
    "noerr": 0,
    "x": 620,
    "y": 320,
    "wires": [["6d07ff34.c23a8"]]
  },
  {
    "id": "bb17123b.26974",
    "type": "comment",
    "z": "1710c00d.e8304",
    "name": "Display Icon by Weather",
    "info": "",
    "x": 930,
    "y": 280,
    "wires": []
  },
  {
    "id": "37a492c1.497cbe",
    "type": "function",
    "z": "1710c00d.e8304",
    "name": "Mapping US AQI",
    "func": "const { aqius } = msg.pollution;\nreturn {aqi: aqius};",
    "outputs": 1,
    "noerr": 0,
    "x": 610,
    "y": 440,
    "wires": [["aa916fa2.84853"]]
  },
  {
    "id": "aa916fa2.84853",
    "type": "ui_gauge",
    "z": "1710c00d.e8304",
    "name": "AQI Box",
    "group": "7b469d8d.557a74",
    "order": 1,
    "width": 6,
    "height": 4,
    "gtype": "gage",
    "title": "US AQI (EPA)",
    "label": "",
    "format": "{{aqi}}",
    "min": 0,
    "max": "300",
    "colors": ["#40e400", "#ffff00", "#f91000"],
    "seg1": "Moderate",
    "seg2": "Unhealthy",
    "x": 880,
    "y": 440,
    "wires": []
  },
  {
    "id": "29fbdd45.022852",
    "type": "comment",
    "z": "1710c00d.e8304",
    "name": "Display US AQI",
    "info": "",
    "x": 900,
    "y": 400,
    "wires": []
  },
  {
    "id": "702edfc.724c12",
    "type": "debug",
    "z": "1710c00d.e8304",
    "name": "Console - Raw",
    "active": false,
    "tosidebar": true,
    "console": true,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "x": 1030,
    "y": 100,
    "wires": []
  },
  {
    "id": "7f272417.53badc",
    "type": "function",
    "z": "1710c00d.e8304",
    "name": "Extract Env.",
    "func": "return {\n    payload: {\n        city: env.get('AIRVISUAL_CITY'),\n        state: env.get('AIRVISUAL_STATE'),\n        country:env.get('AIRVISUAL_COUNTRY'),\n        key: env.get('AIRVISUAL_KEY')\n    }\n};",
    "outputs": 1,
    "noerr": 0,
    "x": 350,
    "y": 100,
    "wires": [["186a450.ef70abb"]]
  },
  {
    "id": "e0a6ce3c.3572b",
    "type": "complete",
    "z": "1710c00d.e8304",
    "name": "Trigger AirData",
    "scope": ["b2cbe7cc.31de18"],
    "uncaught": false,
    "x": 120,
    "y": 320,
    "wires": [["d16349c5.c65668"]]
  },
  {
    "id": "c61a0bc5.f2f6f8",
    "type": "debug",
    "z": "1710c00d.e8304",
    "name": "Console - airData",
    "active": false,
    "tosidebar": true,
    "console": true,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "x": 620,
    "y": 240,
    "wires": []
  },
  {
    "id": "b2cbe7cc.31de18",
    "type": "function",
    "z": "1710c00d.e8304",
    "name": "Save Data",
    "func": "function saveData({payload}) {\n    flow.set('airData', payload);\n    return flow.get('airData');\n}\n\nreturn saveData(msg);",
    "outputs": 1,
    "noerr": 0,
    "x": 790,
    "y": 100,
    "wires": [["702edfc.724c12"]]
  },
  {
    "id": "9dcaca6e.01c458",
    "type": "comment",
    "z": "1710c00d.e8304",
    "name": "When air data has been saved it trigger immediately.",
    "info": "",
    "x": 230,
    "y": 240,
    "wires": []
  }
]
